import { BrowserWindow } from "electron";
import { getConfigPath } from "./getConfigPath";
import path from "path";

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

export const createWindow = (app: Electron.App): BrowserWindow => {

  
const iconPath = app.isPackaged
  ? path.join(process.resourcesPath, process.platform === 'win32' ? 'logo.ico' : 'logo.icns')
  : path.join(__dirname, '../../src/renderer/assets', process.platform === 'win32' ? 'logo.ico' : 'logo.icns'); // dev


  const mainWindow = new BrowserWindow({
    show: false, 
    autoHideMenuBar: true,
    icon: iconPath,
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
    },
  });
  mainWindow.maximize();
  mainWindow.show();

  // and load the index.html of the app.
  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

  if (!app.isPackaged) {
    mainWindow.webContents.openDevTools();
  }

  return mainWindow;
};